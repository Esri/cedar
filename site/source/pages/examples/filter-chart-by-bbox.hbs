---
title: Example - Filter Chart by Map Extent
layout: example.hbs
amd: true
---

<style>
  #chart {
    margin-bottom:50px;
  }
  #chart canvas {
    margin: auto;
    display: block;
  }
</style>

<link rel="stylesheet" href="http://js.arcgis.com/3.12/esri/css/esri.css">
<script src="http://js.arcgis.com/3.12/"></script>

{{#markdown}}

# Filter Chart by BBOX

This example shows how to filter the charted data based on a bounding box (bbox). Setting `dataset.query.bbox` is simply a convenience method as compared to setting the `dataset.query.geometry`.

**Note:** BBOX expects comma delimited string of geographic (lat/long) coordinates as follows: West,East,South,North

**Note:** Setting both a `bbox` and a `geometry` on the `dataset.query` object will cause an exception to be thrown.
{{/markdown}}

<div id="map"></div>
<div id="chart"></div>


{{#markdown}}
```js
  require(["cedar", "esri/map", "esri/layers/FeatureLayer", "esri/symbols/SimpleMarkerSymbol", "esri/symbols/SimpleLineSymbol",
    "esri/renderers/SimpleRenderer",  "esri/renderers/UniqueValueRenderer", "esri/Color", "dojo/domReady!"], function(Cedar, Map, FeatureLayer, 
       SimpleMarkerSymbol, SimpleLineSymbol, SimpleRenderer, UniqueValueRenderer, Color) { 

    var defaultSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.STYLE_CIRCLE, 9,
      new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,
      new Color([198,12,70,1]), 1),
      new Color([248,187,37,0.9]));

    var rend = new SimpleRenderer(defaultSymbol);

    var featureLayer = new FeatureLayer("http://services.arcgis.com/bkrWlSKcjUDFDtgw/arcgis/rest/services/It's_a_Tornado_Map/FeatureServer/0",{
      mode: FeatureLayer.SNAPSHOT,
      outFields: ["*"]
    });

    //create esri map
    var map = new Map("map", {
      center: [-99, 38.9],
      zoom: 4,
      basemap: "topo",
      smartNavigation: false
    });

    map.on('load', function() {
      map.disableScrollWheelZoom();
    });

    map.on('extent-change', function() {
      onExtentChanged();
    });


    window.map = map;

    featureLayer.setRenderer(rend);
    map.addLayer(featureLayer);
    
    var dataset = {
      "url":"http://services.arcgis.com/bkrWlSKcjUDFDtgw/arcgis/rest/services/It's_a_Tornado_Map/FeatureServer/0",
      "query": {
        "groupByFieldsForStatistics": "state",
        "outStatistics": [{
          "statisticType": "sum", 
          "onStatisticField": "injuries", 
          "outStatisticFieldName": "injuries_SUM"
        }]
      },  
      "mappings":{
        "x": {"field":"state","label":"State"},
        "y": {"field":"injuries_SUM","label":"Injuries"}
      }
    };

    var chart = new Cedar({"type": "bar", "dataset": dataset});

    chart.override = {
      "height": 300,
      "marks": [{"properties": {
          "hover": {"fill": {"value": "#f8bb25"}},
          "update": {"fill": {"value": "#c60c46"}}
        }
      }]
    };

    //create and render a chart
    chart.show({
      'elementId': '#chart'
    });
    window.chart = chart;

    function onExtentChanged(){
      var extent = map.geographicExtent.toJson();
      //WESN order
      chart.dataset.query.bbox = extent.xmin + ',' + extent.xmax + ',' + extent.ymin + ',' + extent.ymax;
      chart.update();
    }


  });

```
{{/markdown}}


<script>
  require(["cedar", "esri/map", "esri/layers/FeatureLayer", "esri/symbols/SimpleMarkerSymbol", "esri/symbols/SimpleLineSymbol",
    "esri/renderers/SimpleRenderer",  "esri/renderers/UniqueValueRenderer", "esri/Color", "dojo/domReady!"], function(Cedar, Map, FeatureLayer, 
       SimpleMarkerSymbol, SimpleLineSymbol, SimpleRenderer, UniqueValueRenderer, Color) { 

    var defaultSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.STYLE_CIRCLE, 9,
      new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID,
      new Color([198,12,70,1]), 1),
      new Color([248,187,37,0.9]));

    var rend = new SimpleRenderer(defaultSymbol);

    var featureLayer = new FeatureLayer("http://services.arcgis.com/bkrWlSKcjUDFDtgw/arcgis/rest/services/It's_a_Tornado_Map/FeatureServer/0",{
      mode: FeatureLayer.SNAPSHOT,
      outFields: ["*"]
    });

    //create esri map
    var map = new Map("map", {
      center: [-99, 38.9],
      zoom: 4,
      basemap: "topo",
      smartNavigation: false
    });

    map.on('load', function() {
      map.disableScrollWheelZoom();
    });

    map.on('extent-change', function() {
      onExtentChanged();
    });


    window.map = map;

    featureLayer.setRenderer(rend);
    map.addLayer(featureLayer);
    
    var dataset = {
      "url":"http://services.arcgis.com/bkrWlSKcjUDFDtgw/arcgis/rest/services/It's_a_Tornado_Map/FeatureServer/0",
      "query": {
        "groupByFieldsForStatistics": "state",
        "outStatistics": [{
          "statisticType": "sum", 
          "onStatisticField": "injuries", 
          "outStatisticFieldName": "injuries_SUM"
        }]
      },  
      "mappings":{
        "x": {"field":"state","label":"State"},
        "y": {"field":"injuries_SUM","label":"Injuries"}
      }
    };

    var chart = new Cedar({"type": "bar", "dataset": dataset});

    chart.override = {
      "height": 300,
      "marks": [{"properties": {
          "hover": {"fill": {"value": "#f8bb25"}},
          "update": {"fill": {"value": "#c60c46"}}
        }
      }]
    };

    //create and render a chart
    chart.show({
      'elementId': '#chart'
    });
    window.chart = chart;

    function onExtentChanged(){
      var extent = map.geographicExtent.toJson();
      //WESN order
      chart.dataset.query.bbox = extent.xmin + ',' + extent.xmax + ',' + extent.ymin + ',' + extent.ymax;
      chart.update();
    }


  });

</script>