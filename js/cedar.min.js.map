{"version":3,"file":null,"sources":["../src/utils/utils.js","../src/utils/spec.js","../src/utils/request.js","../src/cedar.js"],"sourcesContent":["import * as d3 from 'd3';\n/**\n * Merges n objects\n * @param  {object} source Empty object that other objects will be merged into\n * @return {Object}        Merged objects\n */\nexport function mixin (source) {\n  const args = [...arguments];\n  for (let i = 1; i < args.length; i++) {\n    d3.entries(args[i]).forEach((p) => {\n      source[p.key] = p.value;\n    });\n  }\n  return source;\n}\n\n/**\n * Recursively merge properties of two objects\n */\nexport function mergeRecursive (obj1, obj2) {\n  for (let p in obj2) {\n    if (obj2.hasOwnProperty(p)) {\n      try {\n        // Property in destination object set; update its value.\n        if (obj2[p].constructor === Object || obj2[p].constructor === Array) {\n          obj1[p] = mergeRecursive(obj1[p], obj2[p]);\n        } else {\n          obj1[p] = obj2[p];\n        }\n      } catch (e) {\n        // Property in destination object not set; create it and set its value\n        obj1[p] = obj2[p];\n      }\n    }\n  }\n  return obj1;\n}\n\n/**\n * Token replacement on a string\n * @param  {string} template string template\n * @param  {object} params   Object hash that maps to the tokens to be replaced\n * @return {string}          string with values replaced\n */\nexport function supplant (template, params) {\n  const t = template.replace(/{([^{}]*)}/g,\n    (a, b) => {\n      const r = getTokenValue(params, b);\n\n      return typeof r === 'string' || typeof r === 'number' ? r : a;\n    }\n  );\n  return t.replace(/\"{([^{}]*)}\"/g,\n    (a, b) => {\n      let r = getTokenValue(params, b);\n      return (!!r && r.constructor === Array) ? JSON.stringify(r) : a;\n    });\n}\n\n/**\n  * Get the value of a token from a hash\n  * @param  {object} tokens    Hash {a: 'a', b: { c: 'c'} }\n  * @param  {string} tokenName Property name: 'a' would yield 'a', 'b.c' would yield 'c'\n  * @return {Any}           Returns value contained within property\n  * Pulled from gulp-token-replace (MIT license)\n  * https://github.com/Pictela/gulp-token-replace/blob/master/index.js\n */\nexport function getTokenValue (tokens, tokenName) {\n  let tmpTokens = tokens;\n  let tokenNameParts = tokenName.split('.');\n  for (let i = 0; i < tokenNameParts.length; i++) {\n    if (tmpTokens.hasOwnProperty(tokenNameParts[i])) {\n      tmpTokens = tmpTokens[tokenNameParts[i]];\n    } else {\n      return null;\n    }\n  }\n  return tmpTokens;\n}\n\n /**\n  * Helper function that validates that the\n  * mappings hash contains values for all\n  * the inputs\n  * @param  {array} inputs   Array of inputs\n  * @param  {object} mappings Hash of mappings\n  * @return {array}          Missing mappings\n  * @access private\n  */\nexport function validateMappings (inputs, mappings) {\n  return inputs.filter((input) => {\n    if (input.required && !mappings[input.name]) {\n      return input;\n    }\n  });\n}\n\n /**\n  * Validate that the incoming data has the fields expected\n  * in the mappings\n  * @access private\n  */\nexport function validateData (data, mappings) {\n  const missingInputs = [];\n  if (!data.features || !Array.isArray(data.features)) {\n    throw new Error('Data is expected to have features array!');\n  }\n  const firstRow = data.features[0].attributes;\n  for (let key in mappings) {\n    if (mappings.hasOwnProperty(key)) {\n      let fld = getMappingFieldName(key, mappings[key].field);\n      if (!firstRow.hasOwnProperty(fld)) {\n        missingInputs.push(fld);\n      }\n    }\n  }\n  return missingInputs;\n}\n\n /**\n  * TODO does nothing, must figure out.\n  * Centralize and abstract the computation of\n  * expected field names, based on the mapping name\n  * @access private\n  */\nexport function getMappingFieldName (mappingName, fieldName) {\n  // this function why?\n\n  let name = fieldName;\n   // if(mappingName.toLowerCase() === 'count'){\n   //  name = fieldName + '_SUM';\n   // }\n  return name;\n}\n\nconst utils = {\n  mixin,\n  supplant,\n  mergeRecursive,\n  getTokenValue,\n  validateMappings,\n  validateData,\n  getMappingFieldName\n};\n\nexport default utils;\n","/**\n * Return a default definition Object\n * @return {Object} Default definition\n */\nexport function defaultDefinition () {\n  return {\n    dataset: {\n      query: defaultQuery()\n    },\n    template: {}\n  };\n}\n\n/**\n * Return AGO query defaults\n * @return {Object} Default query\n */\nexport function defaultQuery () {\n  return {\n    where: '1=1',\n    returnGeometry: false,\n    returnDistinctValues: false,\n    returnIdsOnly: false,\n    returnCountOnly: false,\n    outFields: '*',\n    sqlFormat: 'standard',\n    f: 'json'\n  };\n}\n\n/**\n * Ensure that all required inputs exist in mappings\n * @param  {object} mappings Mappings object\n * @param  {array} inputs   Array of inputs in specification\n * @return {object}          Returns mappings\n */\nexport function applyDefaultsToMappings (mappings, inputs) {\n  const errs = [];\n  // iterate over inputs\n  for (let i = 0; i < inputs.length; i++) {\n    const input = inputs[i];\n\n    // If required but not there\n    if (input.required && !mappings[input.name]) {\n      errs.push(input.name);\n    }\n\n    // if it's not required, has a default and not in the mappings\n    if (!input.required && !mappings[input.name] && input['default']) {\n      // add the default\n      mappings[input.name] = input['default'];\n    }\n  }\n  if (errs.length > 0) {\n    throw new Error(`Required Mappings Missing: ${errs.join(',')}`);\n  } else {\n    return mappings;\n  }\n}\n\n/**\n * Convert datasets to dataset\n */\nexport function convertDatasetsToDataset (datasets, series, chartType, dataset) {\n  // console.log('Datasets and dataset are:', datasets, dataset);\n  if (!dataset) {\n    dataset = {\n      query: this.defaultQuery()\n    };\n  }\n  // Mappings held here\n  const mappings = {};\n  // Queries held here\n  const queries = [];\n  // Urls held here\n  const urls = [];\n  // Data held here\n  const data = [];\n\n  datasets.forEach((dtst) => {\n    // Push queries data and urls first\n    if (dtst.query) {\n      queries.push(dtst.query);\n    }\n    if (dtst.url) {\n      urls.push(dtst.url);\n    }\n    if (dtst.data) {\n      data.push(dtst.data);\n    }\n    // Construct mappings\n    // Grouped bar chart here\n    if (chartType === 'grouped') {\n      if (!mappings.group) {\n        mappings.group = series[0].category;\n      }\n      if (!mappings.x) {\n        mappings.x = {\n          field: [],\n          label: series[0].value.label\n        };\n      }\n      if (series.length > 1) {\n        series.forEach((attr) => {\n          mappings.x.field.push(`attributes.${attr.value.field}`);\n        });\n      } else {\n        mappings.x.field.push(`attributes.${series[0].value.field}`);\n      }\n\n      // Bubble Chart starts here\n    } else if (chartType === 'bubble') {\n      mappings.x = series[0].category;\n      mappings.y = series[0].value;\n      mappings.size = series[0].size;\n\n      // Scatter plot starts here\n    } else if (chartType === 'scatter') {\n      mappings.x = series[0].category;\n      mappings.y = series[0].value;\n      mappings.color = series[0].color;\n\n      // Pie Chart starts here\n    } else if (chartType === 'pie') {\n      mappings.label = series[0].category;\n      mappings.y = series[0].value;\n      mappings.radius = series[0].radius;\n\n      // Bar horizontal starts here\n    } else if (chartType === 'bar-horizontal') {\n      mappings.y = series[0].category;\n      mappings.x = series[0].value;\n\n      // Timeline chart starts here\n    } else if (chartType === 'time') {\n      mappings.time = series[0].category;\n      mappings.value = series[0].value;\n\n      // time-trendline chart starts here\n    } else if (chartType === 'time-trendline') {\n      mappings.time = series[0].category;\n      mappings.value = series[0].value;\n      mappings.trendline = series[0].trendline;\n\n    // X Y only charts here\n    } else {\n      mappings.x = series[0].category;\n      mappings.y = series[0].value;\n    }\n  });\n\n  const builtDataset = {\n    query: convertQueries(queries, dataset.query),\n    mappings\n  };\n  if (data.length > 0) {\n    builtDataset.data = data[0];\n  }\n\n  if (urls.length > 0) {\n    builtDataset.url = convertUrls(urls);\n  }\n\n  return builtDataset;\n}\n\n/**\n * Convert over query\n */\nfunction convertQueries (queries, defaultQuery) {\n  if (queries.length > 1) {\n    console.warn('Warning, currently multiple queries is not supported. Reverting to default.', queries);\n    return defaultQuery;\n  }\n  return queries[0] ? queries[0] : defaultQuery; // Might not have a query passed in so check and if it hasn't then return default query\n}\n\n/**\n * Convert over URLs\n */\nfunction convertUrls (urls) {\n  if (urls.length > 1) {\n    console.warn('Warning, currently multiple URLS are not supported. Using first url', urls);\n    return urls[0];\n  }\n  return urls[0];\n}\n\nconst specUtils = {\n  defaultDefinition,\n  defaultQuery,\n  applyDefaultsToMappings,\n  convertDatasetsToDataset\n};\n\nexport default specUtils;\n","import * as d3 from 'd3';\nimport { mixin } from './utils';\nimport { defaultQuery } from './spec';\n\n/**\n * Takes in params, iterates over them, encodes and returns stringified and encoded query\n *\n * @param {object} params - merged default and user defined parameters\n *\n * @returns {string} - stringified and encoded query\n */\nfunction serializeQueryParams (params) {\n  const str = [];\n  for (const param in params) {\n    if (params.hasOwnProperty(param)) {\n      let val = params[param];\n      if (typeof val !== 'string') {\n        val = JSON.stringify(val);\n      }\n      str.push(`${encodeURIComponent(param)}=${encodeURIComponent(val)}`);\n    }\n  }\n  const queryString = str.join('&');\n  return queryString;\n}\n\n/**\n * Helper function to request JSON from a url\n * @param  {string}   url      URL to request from\n * @param  {Function} callback Callback function\n * @param  {number}   timeout  Timeout on request\n * @return {object}            Response object\n */\nexport function getJson (url, callback, timeout) {\n  const cb = (err, data) => {\n    // if timeout error then return a timeout error\n    if (err && err.response === '') {\n      callback(new Error('This service is taking too long to respond, unable to chart'));\n    } else if (err) {\n      // Other errors return generic error.\n      callback(new Error(`Error loading ${url} with a response of: ${err.message}`));\n    } else {\n      callback(null, JSON.parse(data.responseText));\n    }\n  };\n  if (url.length > 2000) {\n    const uri = url.split('?');\n    d3.xhr(uri[0])\n      .on('beforesend', (xhr) => { xhr.timeout = timeout; xhr.ontimeout = xhr.onload; })\n      .header('Content-Type', 'application/x-www-form-urlencoded')\n      .post(uri[1], cb);\n  } else {\n    d3.xhr(url)\n      .on('beforesend', (xhr) => { xhr.timeout = timeout; xhr.ontimeout = xhr.onload; })\n      .get(cb);\n  }\n}\n\n/**\n * Given a dataset hash create a feature service request\n * @param  {object} dataset       Dataset object\n * @param  {object} queryFromSpec Query passed in by the user\n * @return {string}               url string\n */\nexport function createFeatureServiceRequest (dataset, queryFromSpec) {\n  const mergedQuery = mixin({}, defaultQuery(), queryFromSpec);\n\n  // Handle bbox\n  if (mergedQuery.bbox) {\n    // make sure a geometry was not also passed in\n    if (mergedQuery.geometry) {\n      throw new Error('Dataset.query can not have both a geometry and a bbox specified');\n    }\n    // Get the bbox (w,s,e,n)\n    const bboxArr = mergedQuery.bbox.split(',');\n\n    // Remove it so it's not serialized as-is\n    delete mergedQuery.bbox;\n\n    // cook it into a json string\n    mergedQuery.geometry = JSON.stringify({\n      xmin: bboxArr[0],\n      ymin: bboxArr[2],\n      xmax: bboxArr[1],\n      ymax: bboxArr[3]\n    });\n    // set spatial ref as geographic\n    mergedQuery.inSR = '4326';\n  }\n\n  if (!mergedQuery.groupByFieldsForStatistics && !!dataset.mappings.group) {\n    mergedQuery.groupByFieldsForStatistics = dataset.mappings.group.field;\n  }\n  if (!mergedQuery.outStatistics && !!dataset.mappings.count) {\n    // TODO Why are we explicitlystating _SUM as a stats type?\n    mergedQuery.orderByFields = `${dataset.mappings.count.field}_SUM`;\n    mergedQuery.outStatistics = JSON.stringify([{\n      statisticType: 'sum',\n      onStatisticField: dataset.mappings.count.field,\n      outStatisticFieldName: `${dataset.mappings.count.field}_SUM`\n    }]);\n  }\n\n    // iterate the mappings keys to check for sort\n    // -----------------------------------------------------------------\n    // This approach would seem 'clean' but if there are multiple fields\n    // to sort by, the order would be determined by how javascript decides to\n    // iterate the mappings property hash.\n    // Thus, using mappings.sort gives the developer explicit control\n    // -----------------------------------------------------------------\n    // var sort = [];\n    // for (var property in dataset.mappings) {\n    //   if (dataset.mappings.hasOwnProperty(property)) {\n    //     if(dataset.mappings[property].sort){\n    //       //ok - build up the sort\n    //       sort.push(dataset.mappings[property].field + ' ' + dataset.mappings[property].sort);\n    //     }\n    //   }\n    // }\n    // if(sort.length > 0){\n    //   mergedQuery.orderByFields = sort.join(',');\n    // }\n    // -----------------------------------------------------------------\n    // check for a sort passed directly in\n\n  if (dataset.mappings.sort) {\n    mergedQuery.orderByFields = dataset.mappings.sort;\n  }\n\n  let url = `${dataset.url}/query?${serializeQueryParams(mergedQuery)}`;\n\n  if (dataset.token) {\n    url = `${url}&token=${dataset.token}`;\n  }\n\n  return url;\n}\n\nconst requestUtils = {\n  getJson,\n  createFeatureServiceRequest\n};\n\nexport default requestUtils;\n","import { version } from '../package.json';\nimport utils from './utils/utils';\nimport requestUtils from './utils/request';\nimport specUtils from './utils/spec';\n// import specTemplates from './charts/specs';\nimport * as d3 from 'd3';\nimport * as vg from 'vega';\n\n// get cedar root URL for loading chart specs\nconst baseUrl = (function () {\n  var cdnProtocol = 'http:';\n  var cdnUrl = '//esri.github.io/cedar/js';\n  var src;\n  if (window && window.document) {\n    src = (window.document.currentScript && window.document.currentScript.src);\n    if (src) {\n      // real browser, get base url from current script\n      return src.substr(0, src.lastIndexOf('/'));\n    } else {\n      // ie, set base url to CDN\n      // NOTE: could fallback to CDN only if can't find any scripts named cedar\n      return (window.document.location ? window.document.location.protocol : cdnProtocol) + cdnUrl;\n    }\n  } else {\n    // node, set base url to CDN\n    return cdnProtocol + cdnUrl;\n  }\n})();\n\nexport default class Cedar {\n  /**\n   * Creates a new Chart object.\n   *\n   * @example\n   *  var chart = new Cedar({\n   *    \"type\": \"bar\"\n   *    \"dataset\":\n   *      \"url\":\"http://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Education_WebMercator/MapServer/5\",\n   *      \"query\": {\n   *        \"groupByFieldsForStatistics\": \"FACUSE\",\n   *        \"outStatistics\": [{\n   *          \"statisticType\": \"sum\",\n   *          \"onStatisticField\": \"TOTAL_STUD\",\n   *          \"outStatisticFieldName\": \"TOTAL_STUD_SUM\"\n   *        }]\n   *      },\n   *      \"mappings\":{\n   *        \"sort\": \"TOTAL_STUD_SUM DESC\",\n   *        \"x\": {\"field\":\"FACUSE\",\"label\":\"Facility Use\"},\n   *        \"y\": {\"field\":\"TOTAL_STUD_SUM\",\"label\":\"Total Students\"}\n   *      }\n   *    }\n   *  });\n   *\n   * @param {Object} options\n   * @param {String} options.type - Chart type as a chartType (\"bar\") or a URL to a Cedar specification\n   * @param {Object} options.dataset - Dataset definition including Source and Style mappings\n   * @param {String} options.dataset.url - GeoService Layer URL\n   *\n   * \"url\":\"http://.../rest/services/DATA/Education/MapServer/5\"\n   * @param {Object} options.dataset.query - GeoServices Layer query parameters (where, bbox, outStatistics) [optional]\n   *\n   * \"query\": {\n   *   \"groupByFieldsForStatistics\": \"FACUSE\",\n   *   \"outStatistics\": [{\n   *     \"statisticType\": \"sum\",\n   *     \"onStatisticField\": \"TOTAL_STUD\",\n   *     \"outStatisticFieldName\": \"TOTAL_STUD_SUM\" }] }\n   * @param {Object} options.dataset.data - Inline feature collection, alternative to data from a URL\n   *\n   * \"data\": {\"features\":[{\"attributes\":{\"ZIP_CODE\":20005,\"TOTAL_STUD_SUM\":327}}]}\n   * @param {Object} options.dataset.mappings - Relates data items to the chart style definition\n   * @param {Object} options.override - Changes to the \"options.type\" chart specification\n   * @param {Object} options.tooltip - Optional on-hover tooltip. Element has class=\"cedar-tooltip\" for styling.\n   * @param {String} options.tooltip.id - Optional HTML element to use for tooltip. (default: unique id created)\n   * @param {String} options.tooltip.title - Templated tooltip heading. Uses \"{Variable} template format\"\n   * @param {String} options.tooltip.content - Templated tooltip body text. Uses \"{Variable} template format\"\n   * @return {Object} new Cedar chart object\n   */\n  constructor (options) {\n    this.version = version;\n    // Pull templates in\n    // this.chartTypes = specTemplates;\n\n    let opts = options || {};\n\n    let spec;\n\n    this.baseUrl = baseUrl;\n    this.chartTypes = ['bar', 'bar-horizontal', 'bubble', 'grouped', 'pie', 'scatter', 'sparkline', 'time', 'time-trendline'];\n\n    // Cedar configs such as size..\n    this.width = undefined;\n    this.height = undefined;\n    this.autolabels = true;\n    this.maxLabelLength = undefined;\n\n    // Array to hold event handlers\n    this._events = [];\n\n    // initialize internal definition\n    this._definition = specUtils.defaultDefinition();\n\n    // initialize vega view aka chart\n    this._view = undefined;\n\n    // the vega tooltip\n    this._tooltip = undefined;\n\n    // transform function\n    this._transform = undefined;\n\n    // Queue to hold methods called while xhrs are in progress\n    this._methodQueue = [];\n\n    // Set a base timeout\n    this._timeout = undefined;\n\n    // override the base timeout\n    if (opts.timeout) {\n      this._timeout = opts.timeout;\n    }\n\n    // override the base url\n    if (opts.baseUrl) {\n      this.baseUrl = opts.baseUrl;\n    }\n\n    /**\n     * Flag used to determine if the library is waiting for an xhr to return.\n     * @access private\n     */\n    this._pendingXhr = false;\n\n    /**\n     * Definition\n     */\n\n    if (opts.definition) {\n      if (typeof opts.definition === 'object') {\n        // hold onto the definition\n        this._definition = opts.definition;\n      } else if (typeof opts.definition === 'string') {\n        // assume it's a url (relative or absolute) and fetch the def object\n        this._pendingXhr = true;\n        requestUtils.getJson(opts.definition, (err, data) => {\n          if (err) {\n            throw new Error('Error fetching definition object', err);\n          }\n          this._pendingXhr = false;\n          this._definition = data;\n          this._purgeMethodQueue();\n        }, this._timeout);\n      } else {\n        throw new Error('parameter definition must be an object or string (url)');\n      }\n    }\n\n    // if there are overrides\n    if (opts.override) {\n      this._definition.override = opts.override;\n    }\n\n    /**\n     * Specs\n     */\n\n    // first, check for pre-defined chart type passed in as 'type'\n    this._chartType = opts.type;\n    spec = this._getSpecificationUrl(opts.type);\n\n    // If url or object passed use that...\n    if (opts.specification) {\n      spec = opts.specification;\n    }\n\n    if (spec) {\n      // is it an object or string, assumed to be url\n      if (typeof spec === 'object') {\n        // hold onto the template\n        this._definition.specification = spec;\n      } else if (typeof spec === 'string') {\n        // assume it's a url (rel or abs) and fetch the template object\n        this._pendingXhr = true;\n        this._pendingXhr = true;\n        requestUtils.getJson(spec, (err, data) => {\n          if (err) {\n            throw new Error('Error fetching template object', err);\n          }\n          this._pendingXhr = false;\n          this._definition.specification = data;\n          this._purgeMethodQueue();\n        }, this._timeout);\n      } else {\n        throw new Error('parameter specification must be an object or string (url)');\n      }\n    }\n\n    // Allow a dataset to be passed in....\n    if (opts.dataset && typeof opts.dataset === 'object') {\n      opts.dataset.query = utils.mixin({}, specUtils.defaultQuery(), opts.dataset.query);\n      // Assign it\n      this._definition.dataset = opts.dataset;\n    }\n\n    // Allow datasets to be passed in\n    if (opts.datasets && Array.isArray(opts.datasets)) {\n      this._definition.datasets = opts.datasets;\n    }\n\n    // Allow series to be passed in\n    if (opts.series && Array.isArray(opts.series)) {\n      this._definition.series = opts.series;\n    }\n\n    /**\n     * Tooltip\n     */\n    // allow a tooltip to be passed in...\n    if (opts.tooltip && typeof opts.tooltip === 'object') {\n      this.tooltip = opts.tooltip;\n    } else {\n      // Build a default tooltip based on first two imputs....\n      const inputs = [];\n      for (let input in this._definition.dataset.mappings) {\n        if (this._definition.dataset.mappings.hasOwnProperty(input)) {\n          const field = this._definition.dataset.mappings[input].field;\n          if (field !== undefined && field !== null) {\n            inputs.push(field);\n          }\n        }\n      }\n      if (inputs.length >= 2) {\n        this.tooltip = {\n          'title': `{${inputs[0]}}`,\n          'content': `{${inputs[1]}}`\n        };\n      }\n    }\n\n    /**\n     * tranform\n     */\n    // Allow a transform func to pass in\n    if (opts.transform && typeof opts.transform === 'function') {\n      this._transform = opts.transform;\n    }\n  }\n\n  /**\n   * Properties\n   */\n  // Dataset - old api\n  get dataset () {\n    return this._definition.dataset;\n  }\n  set dataset (val) {\n    this._definition.dataset = val;\n  }\n\n  // Datasets - new api\n  get datasets () {\n    return this._definition.datasets;\n  }\n  set datasets (val) {\n    this._definition.datasets = val;\n  }\n\n  // Series - new api\n  get series () {\n    return this._definition.series;\n  }\n  set series (val) {\n    this._definition.series = val;\n  }\n\n  // Specification\n  get specification () {\n    return this._definition.specification;\n  }\n  set specification (val) {\n    this._definition.specification = val;\n  }\n\n  // override\n  get override () {\n    return this._definition.override;\n  }\n  set override (val) {\n    this._definition.override = val;\n    // return this.update(); // TODO is this the best way?\n  }\n\n  // Tooltip\n  get tooltip () {\n    return this._definition.tooltip;\n  }\n  set tooltip (val) {\n    this._definition.tooltip = val;\n    if (this._definition.tooltip.id === undefined || this._definition.tooltip.id === null) {\n      this._definition.tooltip.id = `cedar-${Date.now()}`;\n    }\n  }\n\n  // transform\n  get transform () {\n    return this._transform;\n  }\n  set transform (val) {\n    this._transform = val;\n  }\n\n  _getSpecificationUrl (spec) {\n    if (this.chartTypes.indexOf(spec) !== -1) {\n      spec = `${this.baseUrl}/charts/${this.chartTypes[this.chartTypes.indexOf(spec)]}.json`;\n    }\n    return spec;\n  }\n\n  /**\n   * Inspect the current state of the Object\n   * and determine if we have sufficient information\n   * to render the chart\n   * @return {object} Hash of the draw state + any missing requirements\n   */\n  canDraw () {\n    // dataset?\n    // dataset.url || dataset.data?\n    // dataset.mappings?\n    // specification?\n    // specification.template?\n    // specification.inputs?\n    // specification.inputs ~ dataset.mappings?\n\n    return {drawable: true, errs: []};\n  }\n\n  /**\n   * Draw the chart into the DOM element\n   *\n   * @example\n   *\n   * var chart = new Cedar({\n   *   \"type\": \"scatter\",\n   *   \"dataset\":{\n   *     \"url\":\"http://maps2.dcgis.dc.gov/dcgis/rest/services/DCGIS_DATA/Education_WebMercator/MapServer/5\",\n   *     \"query\":{},\n   *     \"mappings\":{\n   *       \"x\": {\"field\":\"POPULATION_ENROLLED_2008\",\"label\":\"Enrolment 2008\"},\n   *       \"y\": {\"field\":\"SQUARE_FOOTAGE\",\"label\":\"Square Footage\"},\n   *       \"color\":{\"field\":\"FACUSE\",\"label\":\"Facility Type\"}\n   *     }\n   *   }\n   * });\n   *\n   * chart.show({\n   *   elementId: \"#chart\"\n   * });\n   *\n   * @param  {object} options\n   * @param {String} options.elementId [required] Id of the Dom element into which the chart will be rendered\n   * @param {String} options.renderer \"canvas\" or \"svg\" (default: `svg`)\n   * @param {Boolean} options.autolabels place axis labels outside any tick labels (default: false)\n   * @param {String} options.token Token to be used if the data or spec are on a secured server\n   */\n  show (options, clb) {\n    if (this._pendingXhr) {\n      // TODO addToMethodQueue\n      this._addToMethodQueue('show', [options, clb]);\n    } else {\n      let err;\n      // ensure we got an elementId\n      if (!options.elementId) {\n        err = 'Cedar.show requires options.elementId';\n      }\n      // Check if element exists in the page\n      if (d3.select(options.elementId)[0][0] === null) {\n        err = `Element ${options.elementId} is not present in the DOM`;\n      }\n\n      // hold onto the id\n      this._elementId = options.elementId;\n      this._renderer = options.renderer || 'svg'; // default to svg\n      this.width = options.width || this.height;\n      this.height = options.height || this.height;\n      if (options.autolabels !== undefined && options.autolabels !== null) {\n        this.autolabels = options.autolabels;\n      }\n\n      if (options.maxLabelLength) {\n        // check if truncate label length has been passed in\n        this.maxLabelLength = options.maxLabelLength;\n      }\n\n      // hold onto the token\n      if (options.token) {\n        this._token = options.token;\n      }\n\n      if (err) {\n        throw new Error(err);\n      }\n\n      var chk = this.canDraw();\n\n      if (chk.drawable) {\n        this.update(clb);\n      } else {\n        // report the issues\n        const errs = chk.issues.join(',');\n        throw new Error(`Chart can not be drawn because: ${errs}`);\n      }\n    }\n  }\n\n  /**\n   * Draw the chart based on any changes to data or specifications\n   * Should be called after a user modifies\n   * the dataset, query, mappings, chart specification or element size\n   *\n   * @example\n   * dataset = {\"url\": \"...\", \"mappings\": {\"x\": {\"field\": \"STATE\"}, \"y\": {\"field\": \"POPULATION\"}}};\n   * chart = new Cedar({ \"type\": \"bar\", \"dataset\": dataset });\n   * chart.show({elementId: \"#chart\"});\n   * chart.dataset.query.where = \"POPULATION>30000\";\n   * chart.update();\n   */\n  update (clb) {\n    if (this._view) {\n      this.emit('update-start');\n    }\n\n    if (this._pendingXhr) {\n      this._addToMethodQueue('update');\n    } else {\n      if (this._view) {\n        // remove handlers\n        // TODO Remove existing handlers\n        this._remove(this._view);\n      }\n\n      try {\n        if (this._definition.datasets && this._definition.series) {\n          this._definition.dataset = specUtils.convertDatasetsToDataset(this._definition.datasets, this._definition.series, this._chartType, this._definition.dataset);\n          if (!this._definition.tooltip) {\n            this.tooltip = {\n              'title': `{${this._definition.series[0].category.field}}`,\n              'content': `{${this._definition.series[0].value.field}}`\n            };\n          }\n        }\n\n        // Creates the HTML Div and styling if not already created\n        if (this._definition.tooltip) {\n          this._createTooltip(this._definition.tooltip.id);\n        }\n        // Ensure we have required inputs or defaults\n        let compiledMappings = specUtils.applyDefaultsToMappings(this._definition.dataset.mappings, this._definition.specification.inputs);\n\n        let queryFromSpec = utils.mixin({}, this._definition.specification.query, this._definition.dataset.query);\n        queryFromSpec = JSON.parse(utils.supplant(JSON.stringify(queryFromSpec), compiledMappings));\n\n        // allow binding to query properties\n        compiledMappings.query = queryFromSpec;\n\n        // compile the template + mappings --> vega spec\n        let spec = JSON.parse(utils.supplant(JSON.stringify(this._definition.specification.template), compiledMappings));\n\n        // merge in user specified style overrides\n        spec = utils.mergeRecursive(spec, this._definition.override);\n\n        // if the spec has a url in the data node, delete it TODO: need to readress this.\n        if (spec.data[0].url) {\n          delete spec.data[0].url;\n        }\n\n        if (this._definition.dataset.data) {\n          // create the data node using the passed in data\n          spec.data[0].values = this._definition.dataset.data; // TODO: only works on first spec, need to address for multiple datasets.\n\n          // Send to vega\n          this._renderSpec(spec, clb);\n        } else {\n          // We need to fetch the data so....\n          const url = requestUtils.createFeatureServiceRequest(this._definition.dataset, queryFromSpec);\n\n          // create a callback closure to carry the spec\n          const cb = (err, data) => {\n            // Normalize error response\n            if (!err && !!data.error) {\n              err = new Error(data.error.message || data.error.details[0]);\n            }\n            // if no errors then continue...\n            if (!err) {\n              if (this._transform && typeof this._transform === 'function') {\n                data = this._transform(data, this._definition.dataset);\n              }\n              // TODO add error handlers for xhr and AGS errors.\n              spec.data[0].values = data;\n              // send to vega\n              this._renderSpec(spec, clb);\n            } else {\n              // optional callback\n              if (!!clb && typeof clb === 'function') {\n                clb(err, data);\n              }\n            }\n          };\n\n          // fetch the data from the service\n          requestUtils.getJson(url, cb, this._timeout);\n        }\n      } catch (ex) {\n        throw (ex);\n      }\n    }\n  }\n\n  /**\n   * RENDER CHART FUNCTIONS\n   *\n   *\n   * Render a compiled Vega specification using vega runtime\n   */\n\n  _renderSpec (spec, clb) {\n    if (this.autolabels === true) {\n      spec = this._placeLabels(spec);\n      spec = this._placeaAxisTicks(spec);\n    }\n    // Use vega to parse the spec\n    // It will handle the spec as an object or url\n    vg.parse.spec(spec, (err, chartCtor) => {\n      // create the view\n      this._view = chartCtor({\n        el: this._elementId,\n        renderer: this._renderer\n      });\n\n      const width = this.width || parseInt(d3.select(this._elementId).style('width'), 10) || 500;\n      const height = this.height || parseInt(d3.select(this._elementId).style('height'), 10) || 500;\n\n      // render into the element\n      this._view.width(width).height(height).update();\n\n      // attach event proxies\n      this._attach(this._view);\n\n      if (this._view) {\n        this.emit('update-end');\n      }\n\n      // expose errors\n      if (!!clb && typeof clb === 'function') {\n        clb(err, spec);\n      }\n    });\n  }\n\n  /**\n   * AXIS TICK FUNCTIONS START HERE\n   *\n   *\n   * Automatically determines axis title placement\n   *\n   * Calculates the maximum length of a tick label and adds padding\n   */\n\n  _placeLabels (spec) {\n    try {\n      const fields = {};\n      const lengths = {};\n      const inputs = [];\n      // Get all inputs that may be axes\n      for (let input in this._definition.dataset.mappings) {\n        // check also if property is not inherited from prototype\n        if (this._definition.dataset.mappings.hasOwnProperty(input)) {\n          const field = this._definition.dataset.mappings[input].field;\n          if (field) {\n            inputs.push(input);\n            fields[input] = field;\n            lengths[input] = 0;\n          }\n        }\n      }\n      let length = 0;\n\n      // find the max length value for each axis\n      spec.data[0].values.features.forEach((feature) => {\n        inputs.forEach((axis) => {\n          length = (feature.attributes[fields[axis]] || '').toString().length;\n          if (this.maxLabelLength) {\n            // Need to make sure that the gap between title and labels isn't ridiculous\n            length = length < (this.maxLabelLength + 1) ? length : this.maxLabelLength;\n          }\n          if (length > lengths[axis]) {\n            lengths[axis] = length;\n          }\n        });\n      });\n\n      // Change each axis title offset based on longest value\n      inputs.forEach((axis, index) => {\n        let angle = 0;\n        if (!!spec.axes && !!spec.axes[index]) {\n          if (spec.axes[index].properties.labels.angle) {\n            angle = spec.axes[index].properties.labels.angle.value;\n          }\n          if (spec.axes[index].type === 'y') {\n            angle = 100 - angle;\n          }\n          if (this.maxLabelLength) {\n            // Set max length of axes titles\n            spec.axes[index].properties.labels.text = {'template': `{{ datum.data | truncate:${this.maxLabelLength}}}`};\n          }\n          // set title offset\n          spec.axes[index].titleOffset = Math.abs(lengths[axis] * angle / 100 * 8) + 35;\n        }\n      });\n      return spec;\n    } catch (ex) {\n      throw (ex);\n    }\n  }\n\n  /**\n   * Automatically determines number of axis tick marks\n   *\n   * Calculates the maximum length of a tick label and adds padding\n   * TODO: remove expectation that there are both x,y axes\n   */\n\n  _placeaAxisTicks (spec) {\n    if (spec.axes) {\n      try {\n        const width = this.width || parseInt(d3.select(this._elementId).style('width'), 10) || 500;\n        const height = this.height || parseInt(d3.select(this._elementId).style('height'), 10) || 500;\n\n        spec.axes[0].ticks = width / 100;\n        if (spec.axes[1]) {\n          spec.axes[1].ticks = height / 30;\n        }\n      } catch (ex) {\n        throw (ex);\n      }\n    }\n    return spec;\n  }\n\n  /**\n   * TOOLTIP LOGIC HERE\n   *\n   * Instantiates the tooltip element and styling\n   * @access private\n   */\n  _createTooltip (elem) {\n    let tooltipDiv = document.getElementById(elem);\n\n    // Check if tooltip has been created or not...\n    if (tooltipDiv) {\n      return tooltipDiv;\n    }\n\n    // TODO: remove inline CSS\n    let style = document.createElement('style');\n    style.type = 'text/css';\n    style.innerHTML = '.cedar-tooltip {background-color: white; padding: 3px 10px; color: #333; margin: -30px 0 0 20px; position: absolute; z-index: 2000; font-size: 10px; border: 1px solid #BBB;} .cedar-tooltip .title {font-size: 13pt; font-weight: bold; } .cedar-tooltip .content {font-size: 10pt; } ';\n    document.getElementsByTagName('head')[0].appendChild(style);\n\n    tooltipDiv = document.createElement('div');\n    tooltipDiv.className = 'cedar-tooltip';\n    tooltipDiv.id = elem;\n    tooltipDiv.cssText = 'display: none';\n    // We need tooltip at the top of the page\n    document.body.insertBefore(tooltipDiv, document.body.firstChild);\n\n    this.on('mouseout', (event, data) => {\n      this._updateTooltip(event, null);\n    });\n    this.on('mousemove', (event, data) => {\n      this._updateTooltip(event, data);\n    });\n    return tooltipDiv;\n  }\n\n  /**\n   * Places the tooltipe and fills in content\n   *\n   * @access private\n   */\n  _updateTooltip (event, data) {\n    let cedartip = document.getElementById(this._definition.tooltip.id);\n    if (!data) {\n      cedartip.style.display = 'none';\n      return;\n    }\n    cedartip.style.top = `${event.pageY}px`;\n    cedartip.style.left = `${event.pageX}px`;\n    cedartip.style.display = 'block';\n\n    let content = `<span class='title'>${this._definition.tooltip.title}</span><br />`;\n    content += `<p class='content'>${this._definition.tooltip.content}</p>`;\n\n    cedartip.innerHTML = content.replace(/\\{(\\w+)\\}/g, (match, $1) => {\n      return data[$1];\n    });\n  }\n\n   /**\n    * EVENT LOGIC HERE\n    *\n    *\n    * Add a handler for the named event.\n    * Events:\n    *  - mouseover\n    *  - mouseout\n    *  - click\n    *  - update-start\n    *  - update-end\n    *\n    *\n    *\n    * Callback from Cedar events\n    *  - callback Cedar~eventCallback\n    *  - param {Object} event - event response such as mouse location\n    *  - param {Object} data - chart data object\n    *\n    * @example\n    * var chart = new Cedar({ ... });\n    * chart.on('mouseover', function(event, data) {\n    *   console.log(\"Mouse Location:\", [event.offsetX, event.offsetY]);\n    *   console.log(\"Data value:\", data[Object.keys(data)[0]]);\n    * });\n    *\n    * @param {String} eventName name of the event that invokes callback\n    * @param {Cedar~eventCallback} callback - The callback that handles the event.\n    */\n  on (evtName, callback) {\n    this._events.push({type: evtName, callback});\n  }\n  /**\n   * Remove a hanlder for the named event\n   */\n  off (evtName, callback) {\n    this._events.forEach((registeredEvent, index, object) => {\n      if (registeredEvent.type === evtName && registeredEvent.callback === callback) {\n        object.splice(index, 1);\n      }\n    });\n  }\n\n  /**\n   * Trigger a callback\n   * @param {string} eventName - [\"mouseover\",\"mouseout\",\"click\",\"update-start\",\"update-end\"]\n   */\n  emit (eventName) {\n    if (!!this._view._handler._handlers[ eventName ] && !!this._view._handler._handlers[ eventName ][0]) {\n      this._view._handler._handlers[ eventName ][0].handler();\n    }\n  }\n\n  /**\n   * Attach the generic proxy hanlders to the chart view\n   * @access private\n   */\n  _attach (view) {\n    view.on('mouseover', this._handler('mouseover'));\n    view.on('mouseout', this._handler('mouseout'));\n    view.on('mousemove', this._handler('mousemove'));\n    view.on('click', this._handler('click'));\n    view.on('update-start', this._handler('update-start'));\n    view.on('update-end', this._handler('update-end'));\n  }\n\n  /**\n   * Remove all event handlers from the view\n   * @access private\n   */\n  _remove (view) {\n    view.off('mouseover');\n    view.off('mouseout');\n    view.off('mousemove');\n    view.off('click');\n    view.off('update-start');\n    view.off('update-end');\n  }\n\n  /**\n   * Creates an entry in the method queue, executed\n   * once a pending xhr is completed\n   * @access private\n   */\n  _addToMethodQueue (name, args) {\n    this._methodQueue.push({ method: name, args: args });\n  }\n\n  /**\n   * empties the method queue by calling the queued methods\n   * This helps build a more syncronous api, while still\n   * doing async things in the code\n   * @access private\n   */\n  _purgeMethodQueue () {\n    if (this._methodQueue.length > 0) {\n      this._methodQueue.forEach((action, index) => {\n        this[action.method].apply(this, action.args);\n      });\n    }\n  }\n\n  /**\n   * Generic event handler proxy\n   * @access private\n   */\n  _handler (evtName) {\n    // return a handler function w/ the events hash closed over\n    const handler = (evt, item) => {\n      this._events.forEach((registeredHandler) => {\n        if (registeredHandler.type === evtName) {\n          // invoke the callback with the data\n          if (item) {\n            registeredHandler.callback(evt, item.datum.attributes);\n          } else {\n            registeredHandler.callback(evt, null);\n          }\n        }\n      });\n    };\n    return handler;\n  }\n\n  /**\n   * SELECT LOGIC STARTS HERE\n   *\n   * Highlight marker based on attribute value\n   *\n   * @example\n   * chart = new Cedar({...});\n   * chart.select({key: 'ZIP_CODE', value: '20002'});\n   *\n   * @param {object} options - Object(key, value) to match. Calls hover on work\n   * @returns {Array} items - array of chart objects that match the criteria\n   */\n\n  select (options) {\n    let view = this._view;\n    let items = view.model().scene().items[0].items[0].items;\n\n    items.forEach((item) => {\n      if (item.datum.attributes[options.key] === options.value) {\n        if (item.hasPropertySet('hover')) {\n          this._view.update({props: 'hover', items: item});\n        }\n      }\n    });\n\n    return items;\n  }\n\n   /**\n    * Removes highlighted chart items\n    *\n    * If \"options\" are used, only clear specific items, otherwise clears all highlights.\n    * @param {Object} options - Object(key, value) to match. Calls hover on mark\n    * @returns {Array} items - array of chart objects that match the criteria, or null if all items.\n    */\n\n  clearSelection (options) {\n    let view = this._view;\n\n    if (!!options && !!options.key) {\n      let items = view.model().scene().items[0].items[0].items;\n      items.forEach((item) => {\n        if (item.datum.attributes[options.key] === options.value) {\n          this._view.update({props: 'update', items: item});\n        }\n      });\n      return items;\n    } else {\n      // clear all\n      this._view.update();\n      return null;\n    }\n  }\n\n  static getJson (url, callback, timeout) {\n    return requestUtils.getJson(url, callback, timeout);\n  }\n\n  /**\n   * Other now exposed utils!\n   */\n  static _validateMappings (inputs, mappings) {\n    return utils.validateMappings(inputs, mappings);\n  }\n  static _validateData (data, mappings) {\n    return utils.validateData(data, mappings);\n  }\n  static _createFeatureServiceRequest (dataset, queryFromSpec) {\n    return requestUtils.createFeatureServiceRequest(dataset, queryFromSpec);\n  }\n  static _getMappingFieldName (mappingName, fieldName) {\n    return utils.getMappingFieldName(mappingName, fieldName);\n  }\n  // TODO: remove once we have a better way to unit test\n  static _convertDatasetsToDataset (datasets, dataset, chartType) {\n    return specUtils.convertDatasetsToDataset(datasets, dataset, chartType);\n  }\n}\n"],"names":["mixin","source","let","args","i","length","d3.entries","forEach","p","key","value","mergeRecursive","obj1","obj2","hasOwnProperty","constructor","Object","Array","e","supplant","template","params","replace","a","b","const","r","getTokenValue","JSON","stringify","tokens","tokenName","tmpTokens","tokenNameParts","split","validateMappings","inputs","mappings","filter","input","required","name","validateData","data","missingInputs","features","isArray","Error","firstRow","attributes","fld","getMappingFieldName","field","push","mappingName","fieldName","defaultDefinition","dataset","query","defaultQuery","where","returnGeometry","returnDistinctValues","returnIdsOnly","returnCountOnly","outFields","sqlFormat","f","applyDefaultsToMappings","errs","join","convertDatasetsToDataset","datasets","series","chartType","this","queries","urls","dtst","url","group","category","x","label","attr","y","size","color","radius","time","trendline","builtDataset","convertQueries","convertUrls","console","warn","serializeQueryParams","str","param","val","encodeURIComponent","getJson","callback","timeout","cb","err","response","parse","responseText","uri","d3.xhr","on","xhr","ontimeout","onload","header","post","get","createFeatureServiceRequest","queryFromSpec","mergedQuery","bbox","geometry","bboxArr","xmin","ymin","xmax","ymax","inSR","groupByFieldsForStatistics","outStatistics","count","orderByFields","statisticType","onStatisticField","outStatisticFieldName","sort","token","utils","specUtils","requestUtils","baseUrl","src","cdnUrl","window","document","currentScript","substr","lastIndexOf","location","protocol","Cedar","options","version","spec","opts","chartTypes","width","undefined","height","autolabels","maxLabelLength","_events","_definition","_view","_tooltip","_transform","_methodQueue","_timeout","_pendingXhr","definition","this$1","_purgeMethodQueue","override","_chartType","type","_getSpecificationUrl","specification","tooltip","title","content","transform","prototypeAccessors","id","Date","now","indexOf","canDraw","drawable","show","clb","_addToMethodQueue","elementId","d3.select","_elementId","_renderer","renderer","_token","chk","issues","update","emit","_remove","_createTooltip","compiledMappings","values","_renderSpec","error","message","details","ex","_placeLabels","_placeaAxisTicks","vg.parse","chartCtor","el","parseInt","style","_attach","fields","lengths","feature","axis","toString","index","angle","axes","properties","labels","text","titleOffset","Math","abs","ticks","elem","tooltipDiv","getElementById","createElement","innerHTML","getElementsByTagName","appendChild","className","cssText","body","insertBefore","firstChild","event","_updateTooltip","cedartip","display","top","left","match","$1","evtName","off","registeredEvent","object","splice","eventName","_handler","_handlers","handler","view","method","action","apply","evt","item","registeredHandler","datum","select","items","model","scene","hasPropertySet","props","clearSelection","_validateMappings","_validateData","_createFeatureServiceRequest","_getMappingFieldName","_convertDatasetsToDataset"],"mappings":"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"}